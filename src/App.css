
:root {
  --primary-card-color: rgb(76, 71, 82); /* black color */
  --secondary-card-color: #a855f7; /* purple color */
  --accent-card-color-transparent: rgba(255, 255, 255, 0.33); /* grey color */
  --primary-color: #18181b; /* black color */
  --secondary-color: #a855f7; /* purple color */
  --accent-color: #71797E; /* grey color */
  --light-accent-color: white; /* light grey color */
  --lightMode-color: rgba(211, 117, 22, 0.33);
  --light-mode-card-color: rgb(208, 190, 204);
  --viewport-width: 0px;
}
.App{
  /* sets the app portion as flex */
  display: flex;
  flex-direction: column;
  /* overflow: hidden; */
  width: 100%;
}

.App .Home h2 {

  /* sets spacing for headers of current and past project section */
  margin-top: 3rem;
  margin-bottom: 3rem;

  font-size: 6.75em;
  text-align: center;
}



.Gallery{

  /* sets the container as flex and row and starts the containing 
  tags from the left of the page */
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  max-width: 1400px;

  /*sets margin and padding for the gallery*/
  width: 100%;

}

.Gallery .Card{
  height: 400px;
  width: 300px;
}
.Card{
  /* styling for the project cards */
  flex-basis: 300px;

  /*sets flex and direction*/
  display: flex;
  flex-direction: column;
  
  /*sets background and border coloring*/
  border-style: solid;
  border-color: var(--accent-card-color-transparent);
  border-radius: 5%;
  background-color: var(--primary-card-color);
  font-size: 20px;

  /*this is so it doesnt shrink when theres too many cards horizantlally if its a flex container but it isnt right now
  so probably will delete this*/
  flex-shrink: 1;
  flex-grow: 0;
  /* overflow set to fix the top part of image being round*/
  overflow: hidden;

  margin-left: 3vw;
  margin-right: 3vw;
  position: relative;
}
.Card img.deleteButton, img.editButton{
  display: none;
}
.Card:hover img.deleteButton, .Card:hover img.editButton{
  display: block;
  position: absolute;
  width: 30px;
  top: 4px;
  z-index: 3;

  cursor: pointer;

  background-color: var(--light-mode-card-color);
  border-radius: 10px;
  border: 2px solid black;
  padding: 5px;
}
body.lightMode .Card:hover img.deleteButton, 
body.lightMode .Card:hover img.editButton{
  /* background-color: var(--lightMode-color); */
  filter: invert()
}
.Card:hover img.deleteButton{
  right: 4px;
}
.Card:hover img.editButton{
  left: 4px;
}

.Card:has( > button.newCardButton) {
  height: 400px;
  justify-content: center;
  align-items: center;
}
.Card button.newCardButton{
  height: 90%;
  width: 90%;
  border-radius: 10px;
  background-color: var(--accent-card-color-transparent);
  border: 2px solid black;
  cursor: pointer;
}
.Card button.newCardButton img{
  width: 50%;
}
body.lightMode .Card button.newCardButton img{
  filter: brightness(0) saturate(100%) invert(51%) sepia(4%) saturate(672%) hue-rotate(160deg) brightness(90%) contrast(88%);
}

body.lightMode .Card{
  background-color: var(--light-mode-card-color);
  border-color: var(--primary-color);
}

.Card dialog.deleteDialog{
  border: 4px solid white;
  border-radius: 10px;
  color:white;
  background-color: var(--light-mode-card-color);
  padding: 0;
  
}
.Card dialog.deleteDialog::backdrop{
  backdrop-filter: blur(10px);
}
body.lightMode .Card dialog.deleteDialog{
  border-color: black;
  color: black;
}
.Card dialog.deleteDialog div.deleteDialogDiv{
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  
  width: 300px;
  height: 300px;
  padding-bottom: 1em;
  background-color: var(--primary-card-color);
  
}
body.lightMode .Card dialog.deleteDialog div.deleteDialogDiv{
  background-color: var(--light-mode-card-color);
}
.Card dialog.deleteDialog div.deleteDialogDiv div.deleteDialogHeader{
  display:flex;
  width: 100%;
  border-bottom: 2px solid white;
}
body.lightMode .Card dialog.deleteDialog div.deleteDialogDiv div.deleteDialogHeader{
  border-color: black;
}
.Card dialog.deleteDialog button.closeDeleteDialog{

  margin-left: auto;
  padding: 0.5em;
  border: none;
  border-left: solid 2px white;
  font-weight: bolder;
  font-size: larger;
  color: white;
  background-color: inherit;
  cursor: pointer;
}
body.lightMode .Card dialog.deleteDialog button.closeDeleteDialog{
  border-color: black;
  color: black;
}
.Card dialog.deleteDialog button.deleteProjectButton{
  font-weight: bolder;
  font-size: larger;
  border: none;
  border-radius: 10px;
  background-color: var(--secondary-card-color);
  color: white;
  padding: 0.25em 0.5em 0.25em 0.5em;
  cursor: pointer;
}

.Card dialog.deleteDialog h2{
  padding: 0.5em;
}

.CardTexts{
  /*sets the flex settings for the texts and tags of the project card*/
  padding: 3% 5% 3% 5%;

  display:flex;
  flex-direction: column;
  justify-content: space-between;
  flex-grow: 1; /*not sure why this line is here rn*/
}

.Card .ProjectPicLoader{
  position: relative;
  /*makes the picture of the project fit the container*/
  width: 100%;
  height: 50%;
  object-fit: cover;
  animation: skeletonLoading 1s linear infinite alternate;
  /*animation defined in LoadingPlaceHolder.css*/
}

.Card .ProjectPic{
  position: absolute;
  /*makes the picture of the project fit the container*/
  width: 100%;
  height: 50%;
  object-fit: cover;
}

.Card h3{
  /* sets the project name settings*/
  font-size: 1em;
  text-decoration: underline;
  margin-bottom: 0;
  margin-top: 0;
}
.Card h3:hover{
  cursor: pointer;
  text-decoration: underline;
}

.Card p{
  /*sets project description settings*/
  font-size: 1em;
  margin-bottom: 0;
}

div.cardBottomSection{
  /*sets the display settings for the tags section of the cards*/
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-self: flex-end !important;
  font-size: 0.5em;
  color: white;
}


div.cardBottomSection h4{
  font-family: "Inter", sans-serif;
  margin-block: 0;
  /* sets background collor and shadows for the tag*/
  border-radius: 20px;
  line-height: 20px;
  height: 20px;
  background-color: var(--secondary-card-color);
  box-shadow: 0px 5px 5px rgb(64, 58, 58);

  /* spacing and padding between tags and borders */
  padding: 0% 3% 0% 3%;
}

.Icons{
  /* sets settings for the container of link and github icons */
  display:flex;
  flex-direction: row;
  align-items: center;
  margin-left: auto;
}

.Icons>*:first-child {
  /* pushes the icons to the right */
  margin-left: auto;
}

.Icons img{
  /* sets the size of the icons */
  height: 30px;
}

.leftNavButton, .rightNavButton{
  /* sets size and coloring for the left and right buttons of the gallery cards */
  height:50px;
  width:50px;
  /* background-color: rgb(185, 183, 185); */
  border-radius: 50px;

  /* sets the position of the buttons */
  display: flex;
  position: absolute;
  z-index: 2;
  transform: translateY(450%);

  /* background-color: var(--primary-color); */
}

@media (max-width: 600px) {
  .leftNavButton, .rightNavButton{
    display: none;
  }
}

.leftNavButton{
  /* sets positioning of the button */
  left: 2%;
}

.rightNavButton{
  /* sets positioning of the button */
  right: 2%;
}

.leftNavButton:hover, .rightNavButton:hover{
  cursor: pointer;
  background-color: rgb(216, 184, 216);
}
.leftNavButton.disabled:hover, .rightNavButton.disabled:hover{
  cursor: default;
  background-color: rgb(185, 183, 185);
}
.disabled{
  /* sets the coloring and pointer for hover of the butttons*/
  background-color: rgb(185, 183, 185);
  cursor: default;
}

.buttonBackground{
  /*sets the background image of the button */
  object-fit: contain;
  
  /* fills the button container*/
  width: 100%;
  height:100%;
}

.App hr{
  /* sets the margins for the line divding the project card */
  margin-left: 5%;
  margin-right: 5%;
}

div.CardTexts ul {
  padding: 0;
  gap: 2%;
}

ul.cardList{
  /*sets grid and overflow settings for the card showcasing list*/
  display: grid;
  
  padding: 30px 0 30px 0;

  grid-template-columns:repeat(4, 1fr);
  overflow-x: auto;
  /* width: calc(100vw - var(--viewport-width)); */
  scrollbar-width: none;
  gap: 15px;

 
  margin-inline: 5%;
  /* border: solid 2px var(--accent-color);
  border-radius: 3px; */
}

@media (min-width: 800px) {
  ul.cardList{
    border: solid 2px var(--accent-color);
    border-radius: 3px;
  }
}

ul.cardList::-webkit-scrollbar{
  width: 0px;  /* Remove scrollbar space */
  background: transparent;  /* Optional: just make scrollbar invisible */
}

.ScrollBar{
  /* scroll bar wrapper */

  display: flex;
  align-items: center;

  height: 24px;
  width: 100%;
  max-width: 1100px;
  margin-inline: auto;

  margin-top: 2em;
}

.ScrollTrack{

  /* set display settings for the scroll tracker portion */
  height: 2px;
  width: 100%;
  max-width: 1100px;
  margin-inline: auto;

  border-radius: 4px;

  position: relative;
  background-color: var(--accent-color);
}
@media (max-width: 700px) {
  .ScrollTrack{
    height: 4px;
  }
}
.ScrollTrack:hover{

  /* make larger with hover */
  height: 4px;
}

.ScrollThumb{
  /* set display for the thumb of the scroll bar */

  height: 100%;
  width: 30%;

  background-color: var(--light-accent-color);
  border-radius: inherit;
  position: absolute;

  cursor: grab;
}

body.lightMode .ScrollThumb{
  background-color: var(--light-mode-card-color);
}

.ScrollThumb:active{
  /* change size of bar when grabbed */
  height: 8px;
  cursor: grabbing;
}

